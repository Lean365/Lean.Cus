//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成
//     如果重新生成代码，将丢失对此文件的所有修改。
// </auto-generated>
//
// <copyright file="LeanDevicesExtendController.cs" company="Lean365">
//     Copyright (c) Lean365. All rights reserved.
// </copyright>
// <author>Lean365</author>
// <date>2024-01-13</date>
// <summary>
// 设备扩展信息控制器
// </summary>
//------------------------------------------------------------------------------

using System.Collections.Generic;
using System.Threading.Tasks;
using Lean.Cus.Application.Dtos.Admin;
using Lean.Cus.Application.Interfaces.Admin;
using Lean.Cus.Common.Models;
using Lean.Cus.Common.Paging;
using Lean.Cus.Common.Enums;
using Microsoft.AspNetCore.Mvc;

namespace Lean.Cus.Api.Controllers.Admin;

/// <summary>
/// 设备扩展信息
/// </summary>
[Route("api/admin/[controller]")]
[ApiController]
public class LeanDevicesExtendController : ControllerBase
{
    private readonly ILeanDevicesExtendService _devicesExtendService;

    /// <summary>
    /// 初始化设备扩展信息控制器
    /// </summary>
    public LeanDevicesExtendController(ILeanDevicesExtendService devicesExtendService)
    {
        _devicesExtendService = devicesExtendService;
    }

    /// <summary>
    /// 获取设备扩展信息
    /// </summary>
    [HttpGet("{deviceId}")]
    public async Task<ActionResult<LeanApiResult<LeanDevicesExtendDto>>> Get(string deviceId)
    {
        var result = await _devicesExtendService.GetAsync(deviceId);
        return Ok(LeanApiResult<LeanDevicesExtendDto>.Ok(result));
    }

    /// <summary>
    /// 获取用户的设备列表
    /// </summary>
    [HttpGet("user/{userId}")]
    public async Task<ActionResult<LeanApiResult<List<LeanDevicesExtendDto>>>> GetListByUserId(long userId)
    {
        var result = await _devicesExtendService.GetListByUserIdAsync(userId);
        return Ok(LeanApiResult<List<LeanDevicesExtendDto>>.Ok(result));
    }

    /// <summary>
    /// 分页查询设备扩展信息
    /// </summary>
    [HttpGet]
    public async Task<ActionResult<LeanApiResult<PagedResults<LeanDevicesExtendDto>>>> GetPageList([FromQuery] LeanDevicesExtendQueryDto query)
    {
        var result = await _devicesExtendService.GetPagedListAsync(query);
        return Ok(LeanApiResult<PagedResults<LeanDevicesExtendDto>>.Ok(result));
    }

    /// <summary>
    /// 更新设备登录信息
    /// </summary>
    [HttpPut("login")]
    public async Task<ActionResult<LeanApiResult>> UpdateLoginInfo([FromBody] LeanDevicesExtendLoginUpdateDto input)
    {
        await _devicesExtendService.UpdateLoginInfoAsync(input);
        return Ok(LeanApiResult.Ok());
    }

    /// <summary>
    /// 更新设备登出信息
    /// </summary>
    [HttpPut("logout")]
    public async Task<ActionResult<LeanApiResult>> UpdateLogoutInfo([FromBody] LeanDevicesExtendLogoutUpdateDto input)
    {
        await _devicesExtendService.UpdateLogoutInfoAsync(input);
        return Ok(LeanApiResult.Ok());
    }

    /// <summary>
    /// 更新设备在线状态
    /// </summary>
    [HttpPut("{deviceId}/status")]
    public async Task<ActionResult<LeanApiResult>> UpdateOnlineStatus(string deviceId, [FromBody] LeanOnlineStatus status)
    {
        await _devicesExtendService.UpdateOnlineStatusAsync(deviceId, status);
        return Ok(LeanApiResult.Ok());
    }
} 